/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";
import { useFrame } from "@react-three/fiber";
import * as THREE from 'three';

export default function Heli(props) {
  const { nodes, materials } = useGLTF("./Models/Helicopter/heliMod7.glb");

  const rotorRef = useRef()
  const bladesRef = useRef()
  const tailRotorRef = useRef()
  const tailRotorMesh = useRef()

  const [ speed ] = useState((10.5))
  const testMaterial = new THREE.MeshBasicMaterial({color: 0xff0000})

  useFrame((state) => {
    const time = state.clock.getElapsedTime()
    const position = new THREE.Vector3()

    const bladeRotation = new THREE.Quaternion()
    bladeRotation.setFromEuler(new THREE.Euler(0, time * speed, 0))
    bladesRef?.current?.setNextKinematicRotation(bladeRotation)

    const tailPosition = new THREE.Vector3(0.008, 1.361, -6.788)
    const tailRotation = new THREE.Quaternion()
    tailRotation.setFromEuler(new THREE.Euler(time * 2., 0, 0))
    tailRotorRef?.current?.setNextKinematicRotation(tailRotation)
  })

  // useEffect(() => {
  //   tailRotorMesh?.current.position.set([0.008, 1.361, -6.788])
  // }, [])


  return (
    <group {...props} dispose={null}>
      <RigidBody colliders={false}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Fuselage.geometry}
          material={materials.Paint}
          // material={testMaterial}
          position={[0, 0, -1.151]}
        />
      </RigidBody>
      
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WheelR.geometry}
        material={materials.Paint}
        position={[-1.05, 0.308, 1.341]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RearWheel.geometry}
        material={materials.Paint}
        position={[0, 0.175, -5.809]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WheelL.geometry}
        material={materials.Paint}
        position={[1.05, 0.308, 1.341]}
      />
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.Gun.geometry}
        material={materials.Paint}
        position={[0, 0, -1.15]}
      /> */}
      <RigidBody  type="kinematicPosition" colliders="hull" ref={bladesRef}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BladeBase.geometry}
          material={materials.Paint}
          position={[0.007, 3.172, 0.001]}
        />
      </RigidBody>
      
      <RigidBody type="kinematicPosition" colliders="hull" ref={tailRotorRef} position={[0.008, 1.361, -6.788]}>
        <mesh
          ref={tailRotorMesh}
          castShadow
          receiveShadow
          geometry={nodes.TailRotorMast.geometry}
          material={materials.Paint}
          // material={testMaterial}
          // position={[0.008, 1.361, -6.788]}
        />
      </RigidBody>
      
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.GlassDoor2.geometry}
        material={materials.Glass}
        position={[0, 0, -1.151]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.GlassDoor1.geometry}
        material={materials.Glass}
        position={[0, 0, -1.151]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Glass.geometry}
        material={materials.Glass}
        position={[0, 0, -1.151]}
      />
    </group>
  );
}

useGLTF.preload("./Models/Helicopter/heliMod7.glb");

